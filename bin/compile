#!/bin/bash

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
set -x            # enable debugging

BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
PROFILE_DIR="$BUILD_DIR/.profile.d"
PROFILE_PATH="$PROFILE_DIR/jq.sh"

indent() {
  sed -u 's/^/      /'
}

echo "-----> Installing jq@1.6 with oniguruma support"
cd $BUILD_DIR

# download the binary
curl https://raw.githubusercontent.com/szgupta/heroku-buildpack-rubyjq/master/jq-1.6-with-oniguruma.tar.gz -O

# make a directory to untar the binary
mkdir -p vendor/jq

# untar the binary to the desired directory
tar -C vendor/jq -xvf jq-1.6-with-oniguruma.tar.gz
chmod -R 777 vendor/jq

# append desired directory to PATH for dynos
mkdir -p $PROFILE_DIR
touch $PROFILE_PATH
cat >$PROFILE_PATH <<EOF
export PATH=$PATH:${HOME}/vendor/jq/bin
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}"$HOME/vendor/jq/lib"
EOF

# append desired directory to PATH for subsequent buildpacks
cat >$BP_DIR/export <<EOF
export PATH=\$PATH:$BUILD_DIR/vendor/jq/bin
export LIBRARY_PATH=\${LIBRARY_PATH:+\${LIBRARY_PATH}:}$BUILD_DIR/vendor/jq/lib
export LD_LIBRARY_PATH=\${LD_LIBRARY_PATH:+\${LD_LIBRARY_PATH}:}$BUILD_DIR/vendor/jq/lib
export CPATH=\${CPATH:+\${CPATH}:}$BUILD_DIR/vendor/jq/include
EOF

